openapi: 3.0.0
info:
  title: BSky Search API
  version: 1.0.0
paths:
  /stats:
    get:
      summary: Get BlueSky stats about Post Counts per Author
      description: Retrieve the count of users at specified post thresholds, as well as the mean and percentiles of post counts for users. This data is based on what's stored in my Post DB being constructed from the firehose as of May 1st-ish 2023.
      operationId: getStats
      responses:
        "200":
          description: Successfully retrieved stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostStats"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /thread:
    get:
      summary: Get the thread view or layout of a post
      parameters:
        - in: query
          name: authorID
          schema:
            type: string
          description: Author's DID
          required: false
        - in: query
          name: authorHandle
          schema:
            type: string
          description: Author's handle
          required: false
        - in: query
          name: postID
          schema:
            type: string
          description: Post ID
          required: true
        - in: query
          name: layout
          schema:
            type: string
          description: Flag to return layout if set to "true"
          required: false
      responses:
        200:
          description: Successfully retrieved the post list or layout list
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/PostViewList"
                  - $ref: "#/components/schemas/LayoutViewList"
        400:
          description: Bad request, authorID or authorHandle, and postID must be provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Author or post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /distance:
    get:
      summary: Get the social distance between two nodes
      parameters:
        - in: query
          name: src
          schema:
            type: string
          description: Source node DID
          example: did:plc:q6gjnaw2blty4crticxkmujt
          required: true
        - in: query
          name: dest
          schema:
            type: string
          description: Destination node DID
          example: did:plc:oqbijttmayqui2xv3e2xwcdz
          required: true
      responses:
        200:
          description: Successfully calculated the social distance
          content:
            application/json:
              schema:
                type: object
                properties:
                  distance:
                    type: number
                    format: double
                  did_path:
                    type: array
                    items:
                      type: string
                  handle_path:
                    type: array
                    items:
                      type: string
                  weights:
                    type: array
                    items:
                      type: number
                      format: double
        400:
          description: Bad request, src and dest must be provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Source or destination node not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error, infinite weight or distance
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /post/{id}:
    get:
      summary: Get a post by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          description: Post ID
          required: true
      responses:
        200:
          description: Successfully retrieved the post
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        404:
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users/by_handle/{handle}/cluster:
    get:
      summary: Get the cluster label for a user if assigned
      parameters:
        - in: path
          name: handle
          schema:
            type: string
          description: User's handle
          required: true
      responses:
        200:
          description: Successfully retrieved the cluster
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster:
                    $ref: "#/components/schemas/Cluster"
        400:
          description: Bad request, depth must be greater than 0
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /users/by_did/{did}/cluster:
    get:
      summary: Get the cluster label for a user if assigned
      parameters:
        - in: path
          name: did
          schema:
            type: string
          description: User's DID
          required: true
      responses:
        200:
          description: Successfully retrieved the cluster
          content:
            application/json:
              schema:
                type: object
                properties:
                  cluster:
                    $ref: "#/components/schemas/Cluster"
        400:
          description: Bad request, depth must be greater than 0
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    Cluster:
      type: object
      properties:
        cluster_id:
          type: integer
        cluster_name:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        parent_post_id:
          type: string
          nullable: true
        root_post_id:
          type: string
          nullable: true
        author_did:
          type: string
        created_at:
          type: string
          format: date-time
        has_embedded_media:
          type: boolean
        parent_relationship:
          type: string
          nullable: true
        sentiment:
          type: string
          nullable: true
        sentiment_score:
          type: number
          format: float
          nullable: true

    PostView:
      type: object
      properties:
        post:
          $ref: "#/components/schemas/Post"
        author_handle:
          type: string
        depth:
          type: integer

    PostViewList:
      type: array
      items:
        $ref: "#/components/schemas/PostView"

    LayoutView:
      type: object
      properties:
        post:
          $ref: "#/components/schemas/Post"
        author_handle:
          type: string
        depth:
          type: integer
        x:
          type: number
          format: float
        y:
          type: number
          format: float

    LayoutViewList:
      type: array
      items:
        $ref: "#/components/schemas/LayoutView"

    PostStats:
      type: object
      properties:
        total_authors:
          type: integer
          format: int64
        total_users:
          type: integer
          format: int64
        total_posts:
          type: integer
          format: int64
        hellthread_posts:
          type: integer
          format: int64
        mean_post_count:
          type: number
          format: float
        percentiles:
          type: array
          items:
            $ref: "#/components/schemas/Percentile"
        brackets:
          type: array
          items:
            $ref: "#/components/schemas/Bracket"
        topPosters:
          type: array
          items:
            type: object
            properties:
              author_did:
                type: string
              handle:
                type: string
              post_count:
                type: integer
                format: int64
        last_updated:
          type: string
          format: date-time
    Percentile:
      type: object
      properties:
        percentile:
          type: number
          format: float
        count:
          type: integer
          format: int64
    Bracket:
      type: object
      properties:
        min:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
