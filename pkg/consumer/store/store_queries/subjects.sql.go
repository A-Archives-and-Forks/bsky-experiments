// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: subjects.sql

package store_queries

import (
	"context"
)

const createSubject = `-- name: CreateSubject :one
INSERT INTO subjects (actor_did, rkey, col)
VALUES ($1, $2, $3) ON CONFLICT (actor_did, rkey, col) DO
UPDATE
SET actor_did = subjects.actor_did -- a dummy update
RETURNING id, actor_did, rkey, col
`

type CreateSubjectParams struct {
	ActorDid string `json:"actor_did"`
	Rkey     string `json:"rkey"`
	Col      int32  `json:"col"`
}

func (q *Queries) CreateSubject(ctx context.Context, arg CreateSubjectParams) (Subject, error) {
	row := q.queryRow(ctx, q.createSubjectStmt, createSubject, arg.ActorDid, arg.Rkey, arg.Col)
	var i Subject
	err := row.Scan(
		&i.ID,
		&i.ActorDid,
		&i.Rkey,
		&i.Col,
	)
	return i, err
}
